name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - v* # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Release The SYSLOAD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          sudo -E apt-get update --fix-missing
          sudo -E apt-get -y install build-essential libncurses5-dev libcap-dev libfdt-dev
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source $HOME/.cargo/env

          cargo build --release
          zip --junk-paths sysload README.md ./target/release/sysload

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          allowUpdates: true

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./sysload.zip
          asset_name: sysload.zip
          asset_content_type: application/zip
